package com.wzyk.arc.witget.imagecache;import java.net.MalformedURLException;import android.content.Context;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.util.AttributeSet;import android.util.Log;import android.widget.ImageView;import com.wzyk.arc.witget.imagecache.AsyncImageLoader.ImageCallback;public class AsyncImageView extends ImageView{		public ImageLoadListener imageLoadListener;	public Bitmap bt;	AsyncImageLoader imageLoader ;	String url ;	public AsyncImageView(Context context) {		super(context, null);	}		public interface ImageLoadListener {		public void OnImageLoaded(int index);	}		public Bitmap getBitmap(String url){		if(bt!=null&&!bt.isRecycled()){			return bt;		}else{			try {				Log.v("ARC", "url+url+url:"+url);				return imageLoader.readFile(url);			} catch (MalformedURLException e) {				e.printStackTrace();				return null;			}		}			}		public AsyncImageView(Context context, AttributeSet attrs) {		super(context, attrs);	}		public AsyncImageView(Context context, AttributeSet attrs, int defStyle) {		super(context, attrs);	}		public void setUrl(String url,final int id,final int index){		this.url  = url;		imageLoader = new AsyncImageLoader(this.getContext());		imageLoader.loadDrawable(url, new ImageCallback() {			public void imageLoaded(Bitmap mBitmap, String imageUrl) {				if(mBitmap == null){					bt = BitmapFactory.decodeResource(AsyncImageView.this.getResources() , id);					AsyncImageView.this.setImageResource(id);				}else{					bt = mBitmap;					AsyncImageView.this.setImageBitmap(mBitmap);					if(imageLoadListener!=null){						imageLoadListener.OnImageLoaded(index);					}				}								}		});	}}